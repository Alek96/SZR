# Generated by Django 2.1.7 on 2019-04-19 17:39

import GitLabApi.objects
import core.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('django_celery_beat', '0006_periodictask_priority'),
        ('core', '0001_initial'),
        ('groups', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('internal', 'Internal'), ('public', 'Public')], default='private', max_length=10)),
                ('create_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('execute_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('finished_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.PositiveIntegerField(choices=[(4, 'Waiting'), (0, 'Ready'), (1, 'Running'), (2, 'Succeed'), (3, 'Failed')], default=0)),
                ('error_msg', models.CharField(blank=True, max_length=2000, null=True)),
                ('create_type', models.CharField(choices=[('blank', 'Blank'), ('fork', 'Fork'), ('copy', 'Copy')], default='blank', max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('path', models.SlugField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=2000, null=True)),
                ('import_url', models.URLField(blank=True, null=True)),
                ('celery_task', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='django_celery_beat.PeriodicTask')),
                ('gitlab_group', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='groups.GitlabGroup')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, core.models.StatusMethods, core.models.ModelUrlsMethods, GitLabApi.objects.VisibilityLevel),
        ),
        migrations.CreateModel(
            name='GitlabProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gitlab_id', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('gitlab_web_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='addproject',
            name='new_gitlab_project',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='groups.GitlabProject'),
        ),
        migrations.AddField(
            model_name='addproject',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_tasks_groups_addproject', to='core.GitlabUser'),
        ),
        migrations.AddField(
            model_name='addproject',
            name='parent_task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_task_set_groups_addproject', to='groups.AddSubgroup'),
        ),
        migrations.AddField(
            model_name='addproject',
            name='task_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_set_groups_addproject', to='groups.TaskGroup'),
        ),
    ]
