# Generated by Django 2.2.1 on 2019-05-12 01:48

import GitLabApi.objects
import core.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('groups', '0002_auto_20190512_0347'),
        ('django_celery_beat', '0006_periodictask_priority'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('execute_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('finished_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=2000)),
                ('gitlab_project', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='groups.GitlabProject')),
                ('parent_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_group_task_set_projects_taskgroup', to='groups.AddProject')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, core.models.StatusMethods, core.models.ModelUrlsMethods),
        ),
        migrations.CreateModel(
            name='AddMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_level', models.IntegerField(choices=[(10, 'Guest'), (20, 'Reporter'), (30, 'Developer'), (40, 'Master'), (50, 'Owner')], default=10)),
                ('create_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('execute_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('finished_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.PositiveIntegerField(choices=[(4, 'Waiting'), (0, 'Ready'), (1, 'Running'), (2, 'Succeed'), (3, 'Failed')], default=0)),
                ('error_msg', models.CharField(blank=True, max_length=2000, null=True)),
                ('username', models.CharField(max_length=100)),
                ('celery_task', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='django_celery_beat.PeriodicTask')),
                ('gitlab_project', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='groups.GitlabProject')),
                ('new_gitlab_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.GitlabUser')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_tasks_projects_addmember', to='core.GitlabUser')),
                ('parent_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_task_set_projects_addmember', to='groups.AddProject')),
                ('task_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_set_projects_addmember', to='projects.TaskGroup')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, core.models.StatusMethods, GitLabApi.objects.AccessLevel, core.models.ModelUrlsMethods),
        ),
    ]
